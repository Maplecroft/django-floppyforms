// Generated by CoffeeScript 1.3.1
var LeafletWKT, LeafletWidget,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

LeafletWKT = (function() {

  LeafletWKT.name = 'LeafletWKT';

  function LeafletWKT() {}

  LeafletWKT.prototype.toLayer = function(wkt) {
    return console.log(wkt);
  };

  LeafletWKT.prototype.toWKT = function(layer) {
    if (layer._layers) {
      return console.log(layer._layers);
    } else {
      return console.log(layer);
    }
  };

  return LeafletWKT;

})();

LeafletWidget = (function() {

  LeafletWidget.name = 'LeafletWidget';

  function LeafletWidget(options) {
    var layerUrl;
    this.options = options;
    this.mapClick = __bind(this.mapClick, this);

    console.log(this.options);
    this.map = new L.Map(this.options.id);
    layerUrl = this.options.url;
    this.layer = new L.TileLayer(layerUrl, {
      minZoom: 1
    });
    this.marker_group = new L.LayerGroup();
    this.map.setView(new L.LatLng(0, 0), 1);
    this.map.addLayer(this.layer);
    this.map.addLayer(this.marker_group);
    this.map.on('click', this.mapClick);
  }

  LeafletWidget.prototype.clearFeatures = function() {
    return console.log("Clear");
  };

  LeafletWidget.prototype.mapClick = function(e) {
    var marker;
    if (!this.options.is_collection) {
      this.marker_group.clearLayers();
    }
    marker = new L.Marker(e.latlng);
    return this.marker_group.addLayer(marker);
  };

  LeafletWidget.prototype.getEWKT = function(feature) {
    var wkt;
    return wkt = new LeafletWKT().toWKT(this.marker_group);
  };

  return LeafletWidget;

})();

window.floppyforms = window.floppyforms || {};

window.floppyforms.LeafletWidget = LeafletWidget;
